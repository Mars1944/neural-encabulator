// Commented config for editor viewing. Use the JSON (.json) file for runtime.
// If you want to load this .jsonc at runtime, I can update the loader to strip comments.
{
  // Reproducibility and device
  "seed": 42,                     // Seeds Python/NumPy/Torch for repeatability
  "device": "auto",               // auto -> CUDA, then MPS, then CPU

  // Select model family
  "model_type": "cnn",            // Chooses the CNN path (not FT-Transformer)

  // Task
  "num_classes": 2,               // Number of output classes for classifier

  // CNN architecture
  "conv_channels": [32, 64, 128, 256], // Output channels per conv block (capacity/compute)
  "kernel_size": 3,               // Conv kernel size (odd; e.g., 3 or 5)
  "pool_every": 1,                // Apply MaxPool2d(2) after this many conv blocks
  "dropout": 0.1,                 // Dropout probability in conv blocks
  "use_batchnorm": true,          // BatchNorm after conv for stability
  "dilations": [1, 2, 4, 4],      // Per-block dilation to enlarge receptive field

  // Optimization
  "learning_rate": 0.001,         // AdamW learning rate
  "weight_decay": 0.0,            // AdamW L2 regularization

  // Vector-field tiling input
  "field_path": "REPLACE_WITH_PATH_TO_FIELD.npy", // .npy/.npz array (H,W,C) or (C,H,W)
  "tile_size": [256, 256],        // [th, tw] tile size; larger = more context, more memory
  "tile_stride": [256, 256],      // [sh, sw]; set < tile_size for overlap
  "add_magnitude": true,          // If C>=2, append |v| channel (u,v,|v|)
  "normalize": true,              // Per-channel z-score normalization
  "limit_tiles": 64               // Optional cap for quick tests
}

